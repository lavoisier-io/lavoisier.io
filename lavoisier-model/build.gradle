buildscript {
    dependencies {
        classpath library.liquibase.gradle.plugin
        classpath library.liquibase.hibernate
        classpath library.spring.boot.starter.data.jpa
        classpath library.postgresql
        classpath library.querydsl.gradle.plugin
        classpath files('build/classes/main/')
    }
}

apply plugin: 'org.liquibase.gradle'
apply plugin: 'com.ewerk.gradle.plugins.querydsl'

apply from: 'database.gradle'

liquibase {
    activities {
        main {
            changeLogFile projectDir.toString() + '/src/main/resources/db/changelog/db.changelog-master.xml'
            url database.url
            username database.username
            password database.password
            referenceDriver 'liquibase.ext.hibernate.database.connection.HibernateDriver'
            referenceUrl 'hibernate:spring:io.lavoisier.model?dialect=org.hibernate.dialect.PostgreSQL9Dialect'
        }
    }
    runList = 'main'
}

def querydslApt = library.querydsl.apt
querydsl {
    library querydslApt
    querydslSourcesDir "${buildDir}/generated-sources"
    jpa true
}

dependencies {
    compile library.spring.boot.starter.data.jpa
    compile library.querydsl.jpa
    compile library.liquibase.core

    compile library.lombok

    runtime library.postgresql
}

// The following is a work around to make QueryDSL plugin works with Lombok
// See: https://github.com/ewerk/gradle-plugins/issues/59
project.afterEvaluate {
    project.tasks.compileQuerydsl.options.compilerArgs = [
            "-proc:only",
            "-processor", project.querydsl.processors() +
                    ',lombok.launch.AnnotationProcessorHider$AnnotationProcessor'
    ]
}
