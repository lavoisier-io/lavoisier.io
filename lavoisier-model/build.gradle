buildscript {
  dependencies {
    classpath lavoisierDependencies.liquibaseGradlePlugin
    classpath lavoisierDependencies.liquibaseHibernate
    classpath lavoisierDependencies.springBootStarterDataJpa
    classpath lavoisierDependencies.postgresql
    classpath lavoisierDependencies.querydslGradlePlugin
    classpath files('build/classes/main/')
  }
}

apply plugin: 'org.liquibase.gradle'
apply plugin: 'com.ewerk.gradle.plugins.querydsl'

apply from: 'database.gradle'

liquibase {
  activities {
    main {
      changeLogFile projectDir.toString() + '/src/main/resources/db/changelog/db.changelog-master.xml'
      url database.url
      username database.username
      password database.password
      referenceDriver 'liquibase.ext.hibernate.database.connection.HibernateDriver'
      referenceUrl 'hibernate:spring:io.lavoisier.model?dialect=org.hibernate.dialect.PostgreSQL9Dialect'
    }
  }
  runList = 'main'
}

querydsl {
  library lavoisierDependencies.querydslApt
  querydslSourcesDir "${buildDir}/generated-sources"
  jpa true
}

dependencies {
    compile lavoisierDependencies.springBootStarterDataJpa
    compile lavoisierDependencies.querydslJpa
    compile lavoisierDependencies.liquibase

    compile lavoisierDependencies.lombok

    runtime lavoisierDependencies.postgresql
}

// The following is a work around to make QueryDSL plugin works with Lombok
// See: https://github.com/ewerk/gradle-plugins/issues/59
project.afterEvaluate {
  project.tasks.compileQuerydsl.options.compilerArgs = [
    "-proc:only",
    "-processor", project.querydsl.processors() +
      ',lombok.launch.AnnotationProcessorHider$AnnotationProcessor'
  ]
}
